<?php

namespace ImageProcessorBundle\Controller;

use FOS\RestBundle\Controller\FOSRestController;
use Symfony\Component\HttpFoundation\Response;
use FOS\RestBundle\View\View;
use Symfony\Component\HttpFoundation\Request;
use ImageProcessorBundle\FileHandler\Base64ImageHandler;


/**
 * Class DefaultController
 * @package ImageProcessorBundle\Controller
 */
class DefaultController extends FOSRestController
{
    /**
     * @param Request $request
     * @return bool|Base64ImageHandler
     */
    private function uploadFile(Request $request)
    {
        $base64File = $request->get('image');

        if($base64File) {
            $objFile = new Base64ImageHandler($base64File);
           return $objFile;

        }
       return false;
    }


    /**
     * @param Request $request
     * @return View
     */
    public function indexAction(Request $request)
    {
        $uploadedFile = $this->uploadFile($request);

        if ('image/jpeg' !== $uploadedFile->getMimeType()) {
            throw new \InvalidArgumentException('PNG format only allowed.');
        }

        if ($this->getParameter('minFileSize') > $uploadedFile->getSize()) {
            throw new \InvalidArgumentException('File size is too small, Atleast '.$this->getParameter('minFileSize').'bytes expected');
        }


        $fileName = $this->generateUniqueFileName().'.'.$uploadedFile->guessExtension();

        // moves the file to the directory where images are stored
        $movedFile = $uploadedFile->move(
            $this->getParameter('media_directory'),
            $fileName
        );

        return new View(
            ['url' => $request->getUriForPath("/uploads/".$movedFile->getFilename())],
            Response::HTTP_OK
        );
    }

    /**
     * @return string
     */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }

}
